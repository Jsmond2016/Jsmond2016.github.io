(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{270:function(t,s,a){t.exports=a.p+"assets/img/1557555617242.4a8b6e88.png"},271:function(t,s,a){t.exports=a.p+"assets/img/1557555671112.d893645b.png"},272:function(t,s,a){t.exports=a.p+"assets/img/1557556292972.7bf1b89b.png"},273:function(t,s,a){t.exports=a.p+"assets/img/1557559866310.342402ad.png"},274:function(t,s,a){t.exports=a.p+"assets/img/1557560566706.84a2680f.png"},275:function(t,s,a){t.exports=a.p+"assets/img/1557560751787.c6c9e449.png"},276:function(t,s,a){t.exports=a.p+"assets/img/1557561061375.61b3b43d.png"},277:function(t,s,a){t.exports=a.p+"assets/img/1557561428225.38c103dc.png"},278:function(t,s,a){t.exports=a.p+"assets/img/1557561480030.146ecddd.png"},279:function(t,s,a){t.exports=a.p+"assets/img/1557561582004.4ae44488.png"},280:function(t,s,a){t.exports=a.p+"assets/img/1557561710690.659a2fa1.png"},281:function(t,s,a){t.exports=a.p+"assets/img/1557561908044.31bb57d8.png"},282:function(t,s,a){t.exports=a.p+"assets/img/1557562471733.75c22b3a.png"},283:function(t,s,a){t.exports=a.p+"assets/img/1557562743768.6482f15d.png"},284:function(t,s,a){t.exports=a.p+"assets/img/1557562871083.a8a882ec.png"},285:function(t,s,a){t.exports=a.p+"assets/img/1557563052205.94d43994.png"},286:function(t,s,a){t.exports=a.p+"assets/img/1557563361836.1a7a456d.png"},287:function(t,s,a){t.exports=a.p+"assets/img/1557564420792.07a03c15.png"},288:function(t,s,a){t.exports=a.p+"assets/img/1557565435450.6c1f8f00.png"},289:function(t,s,a){t.exports=a.p+"assets/img/1557565941069.c8096561.png"},290:function(t,s,a){t.exports=a.p+"assets/img/1557565835741.840b4994.png"},291:function(t,s,a){t.exports=a.p+"assets/img/1557566029988.b3d76811.png"},292:function(t,s,a){t.exports=a.p+"assets/img/1557566225159.35a1a153.png"},405:function(t,s,a){"use strict";a.r(s);var n=a(0),p=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"文档流（normal-flow）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#文档流（normal-flow）"}},[t._v("#")]),t._v(" 文档流（Normal Flow）")]),t._v(" "),n("h3",{attrs:{id:"块级元素的宽高"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#块级元素的宽高"}},[t._v("#")]),t._v(" 块级元素的宽高")]),t._v(" "),n("ol",[n("li",[t._v("块级元素的高度")])]),t._v(" "),n("p",[t._v("关于块级元素的宽高，可能面试官会问你这样的问题：")]),t._v(" "),n("p",[t._v("面试官：下面页面中，div 的高度为多高？")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token doctype"}},[t._v("<!DOCTYPE html>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("charset")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("utf-8"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("JS Bin"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[t._v("显而易见，div 内为空，通过开发者工具我们可以知道，高度为 0；")]),t._v(" "),n("p",[t._v("面试官：此时，下面页面中，设置字体大小为 20px ，div 的高度为多高？")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token doctype"}},[t._v("<!DOCTYPE html>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("charset")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("utf-8"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("JS Bin"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token style"}},[n("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n  "),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  ")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[t._v("通过设置 border 的 css 我们可以通过开发者工具知道此时 div 的高度。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(270),alt:"1557555617242"}})]),t._v(" "),n("p",[t._v("此时，我们可能会认为：26.4 / 20 = 1.32")]),t._v(" "),n("p",[t._v("认为行高为 1.32")]),t._v(" "),n("p",[n("strong",[t._v("这时，你可能会有答案：div 的高度和行高有关。")])]),t._v(" "),n("p",[t._v("但是，")]),t._v(" "),n("p",[t._v("换成其他字体，发现高度又变了？")]),t._v(" "),n("p",[n("img",{attrs:{src:a(271),alt:"1557555671112"}})]),t._v(" "),n("p",[n("strong",[t._v("此时，你可能又会有答案： div 的高度和字体有关，不同字体的高度是不同的。")])]),t._v(" "),n("p",[t._v("此时，面试官可能又会问你：那你知道不同字体的高度是多少吗？")]),t._v(" "),n("p",[t._v("？？？顿时哑巴。")]),t._v(" "),n("p",[t._v("OK，以上都是为了引出今天要讲的话题——字体设计与 div。")]),t._v(" "),n("p",[t._v("如下图：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(272),alt:"1557556292972"}})]),t._v(" "),n("p",[t._v("平时我们写字的时候，你有细心发现的话，我们书写的"),n("strong",[t._v("字都是按照基线对齐")]),t._v("的，而不是"),n("strong",[t._v("中线对齐")]),t._v("的，这种例子很简单，就是当你在写中文和英文的时候，如英文字母 f 和 g ，会在四线三格的位置中分别占据 【上部，中部，下部】和【中部，下部】的位置，而不同的字母和汉字都基本是在【中部和上部】的位置。")]),t._v(" "),n("p",[t._v("鉴于上述情况，每个字母或者汉字的【高度】不同，那么为了使汉字和字母在【多行显示的情况下尽可能美观】，设计师必须考虑到【行与行之间的间距是多少】。")]),t._v(" "),n("p",[t._v("此时，"),n("strong",[t._v("设计师为其设置了一种【建议行高】的规定")]),t._v("，这就是"),n("strong",[t._v("字体的默认行高")]),t._v("，有的是字体大小的 1.2 倍，有的是 1.3 倍甚至是 3 倍。通常上述信息写在了字体文件中可以看到。")]),t._v(" "),n("p",[t._v("这样一来，我们就可以轻松理解 "),n("strong",[t._v("不同字体的高度是不同的")]),t._v("。")]),t._v(" "),n("p",[t._v("当然，我们也可以自定义行号 "),n("code",[t._v("line-height")]),t._v("，需要注意的是，当"),n("code",[t._v("line-height")]),t._v(" 值设置的过小的时候，"),n("strong",[t._v("小于字体的默认值时，字体大小则不会变的更小。")])]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("块级元素的宽度：")])]),t._v(" "),n("ul",[n("li",[t._v("空格合并：当字与字之间有多个连续空格时，"),n("code",[t._v("html")]),t._v(" 默认会为其显示成一个空格；\n但是为了使"),n("strong",[t._v("上下的字体两边能对齐")]),t._v("，很多人常犯的错误，使用 "),n("code",[t._v("&nbsp;")]),t._v(" 作为空格。")]),t._v(" "),n("li",[t._v("（因为这里有个坑，不同字体设计师的空格代表不同的字体大小。如这里，6个空格表示2个字，即3个空格表示1个字，但是不同字体可能是不一样的）")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(273),alt:"1557559866310"}})]),t._v(" "),n("p",[t._v("那么，上述方法不能使用，该用什么办法呢？")]),t._v(" "),n("p",[t._v("参考答案： "),n("code",[t._v("text-align: justify")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(274),alt:"1557560566706"}})]),t._v(" "),n("p",[t._v("上述对齐方式有个问题，就是"),n("strong",[t._v("它只适应在多行文本的时候，使两边的字体和上下文的字体对齐。")])]),t._v(" "),n("p",[n("strong",[t._v("那还有办法吗？")])]),t._v(" "),n("p",[t._v("当然有，使用 "),n("code",[t._v("::after")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(275),alt:"1557560751787"}})]),t._v(" "),n("p",[t._v("我们给它加上蓝色的边框作为调试，即可看到。")]),t._v(" "),n("p",[t._v("实际上我们也可以看出来，使用这种方式还是在 "),n("code",[t._v("text-align: justify")]),t._v(" 的基础之上的，只不过我们是添加了两个空行而已。")]),t._v(" "),n("p",[t._v("但是，问题来了，这两个空行（蓝色部分）它也占据了一定的行高，为了获得更好的效果，有办法把它去掉吗？")]),t._v(" "),n("p",[t._v("也是有的。")]),t._v(" "),n("p",[n("strong",[t._v("添加三行代码")]),t._v("：")]),t._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[t._v("line-height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("即，设置行高和高度一致，然后让多出的部分隐藏不可见即可实现效果。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(276),alt:"1557561061375"}})]),t._v(" "),n("p",[t._v("3.HTML 元素中，除了元素两端的空格，元素内部的空格（和回车）都会被浏览器看成是一个空格。")]),t._v(" "),n("p",[t._v("例子1：回车导致的空格")]),t._v(" "),n("p",[n("img",{attrs:{src:a(277),alt:"1557561428225"}})]),t._v(" "),n("p",[t._v("例子2：内联元素之间的回车，会被看成是空格")]),t._v(" "),n("p",[n("img",{attrs:{src:a(278),alt:"1557561480030"}})]),t._v(" "),n("p",[t._v("例子3：不管是"),n("code",[t._v("inline")]),t._v(" 元素还是 "),n("code",[t._v("inline-block")]),t._v(" ，都会有空格")]),t._v(" "),n("p",[n("img",{attrs:{src:a(279),alt:"1557561582004"}})]),t._v(" "),n("p",[t._v("那怎么办？如何处理上述例子中的问题？")]),t._v(" "),n("p",[t._v("**答案：**不要用 "),n("code",[t._v("inline")]),t._v(" 或者 "),n("code",[t._v("inline-block")]),t._v(" 换成 "),n("code",[t._v("float: left;")]),t._v(" 和 清除浮动 "),n("code",[t._v("clearfix")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(280),alt:"1557561710690"}})]),t._v(" "),n("p",[t._v("这样一来，元素之间就不会有多余的空格。")]),t._v(" "),n("ol",{attrs:{start:"4"}},[n("li",[t._v("文档流 / 如果内联元素足够多，会变成响应式。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(281),alt:"1557561908044"}})]),t._v(" "),n("p",[t._v("5.遇到问题： 当出现下面的情况时，为什么第二行不会跟上第一行后面，而是单独一行还溢出了 div 宽度？")]),t._v(" "),n("p",[n("img",{attrs:{src:a(282),alt:"1557562471733"}})]),t._v(" "),n("p",[t._v("这种原因是因为：外国人思考中，"),n("strong",[t._v("连续的字母是一个单词")]),t._v("，既然是一个单词，"),n("strong",[t._v("就被浏览器看成一个内联元素")]),t._v("，偏偏这个内联元素的宽度超过了div 的宽度，为此就溢出了。")]),t._v(" "),n("p",[t._v("那么，有什么办法处理这种问题呢？")]),t._v(" "),n("p",[t._v("这本来不是一个问题，因为没有这么长的单词，而要解决这种问题，有2个办法：")]),t._v(" "),n("p",[t._v("（1）使用"),n("strong",[t._v("单词的连字符")]),t._v("来处理即可")]),t._v(" "),n("p",[n("img",{attrs:{src:a(283),alt:"1557562743768"}})]),t._v(" "),n("p",[t._v("（2）不用连字符，就用 "),n("code",[t._v("word-break: break-all")])]),t._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[t._v("word-break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" break-all"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("效果如下：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(284),alt:"1557562871083"}})]),t._v(" "),n("h3",{attrs:{id:"文字溢出省略"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#文字溢出省略"}},[t._v("#")]),t._v(" 文字溢出省略")]),t._v(" "),n("ol",[n("li",[t._v("实现多行文本合并成一行")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(285),alt:"1557563052205"}})]),t._v(" "),n("p",[t._v("使用 "),n("code",[t._v("white-space: nowrap;")])]),t._v(" "),n("p",[t._v("但是这里需要注意，"),n("strong",[t._v("合并后的文字会往右横向排列，且 div 的宽度不会随着文字的长度而变长")]),t._v("。")]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("文字溢出省略")])]),t._v(" "),n("p",[t._v("上面，我们实现了多行文本合并成一行，但是还没有实现【文字溢出省略】")]),t._v(" "),n("p",[t._v("方法如下：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("div{\n\tborder: 1px solid red;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n}\n")])])]),n("p",[t._v("效果如下：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(286),alt:"1557563361836"}})]),t._v(" "),n("p",[t._v("如果忘记了上述方法，怎么办？")]),t._v(" "),n("p",[n("strong",[t._v("谷歌，关键词搜索：【css multi line text ellipsis】，记住，搜英文的方式更高效。")])]),t._v(" "),n("p",[t._v("翻译成中文为 【css 多行 文本 省略号】，谷歌搜索到答案："),n("a",{attrs:{href:"https://css-tricks.com/line-clampin/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Line Clampin' (Truncating Multiple Line Text) | CSS-Tricks"),n("OutboundLink")],1)]),t._v(" "),n("h3",{attrs:{id:"文字垂直居中"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#文字垂直居中"}},[t._v("#")]),t._v(" 文字垂直居中")]),t._v(" "),n("p",[t._v("需求：要求内容的高度为 40px，内容居中。")]),t._v(" "),n("p",[t._v("错误做法：写死高度")]),t._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 40px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-align")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("正确做法：")]),t._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("line-height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 24px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 8px 0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-align")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(287),alt:"1557564420792"}})]),t._v(" "),n("h3",{attrs:{id:"margin-边距合并"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#margin-边距合并"}},[t._v("#")]),t._v(" margin 边距合并")]),t._v(" "),n("p",[t._v("主要体现在 "),n("strong",[t._v("父子边距合并")]),t._v("，如下图：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(288),alt:"1557565435450"}})]),t._v(" "),n("p",[t._v("子元素的边距值超出了父元素的范围内，溢出到外面去了。")]),t._v(" "),n("p",[t._v("即"),n("strong",[t._v("当父元素没有什么东西遮挡或者包裹其内的子元素时，会造成父子元素的边距合并。")])]),t._v(" "),n("p",[t._v("怎么处理？")]),t._v(" "),n("p",[t._v("父元素添加 "),n("code",[t._v("padding")]),t._v(" 或者设置 "),n("code",[t._v("border")]),t._v(" 挡在上下边距之间，即可避免父子元素的边距合并。")]),t._v(" "),n("ul",[n("li",[t._v("父元素添加 padding 实现的效果")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(289),alt:"1557565941069"}})]),t._v(" "),n("ul",[n("li",[t._v("父元素设置 border 实现的效果")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(290),alt:"1557565835741"}})]),t._v(" "),n("ul",[n("li",[t._v("父元素设置 overflow**【不推荐】**")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(291),alt:"1557566029988"}})]),t._v(" "),n("p",[n("strong",[t._v("原因：当有其他需求在父元素内部设置悬浮层时，不能超过父元素的位置，否则不可见，影响后面的开发。")])]),t._v(" "),n("ul",[n("li",[t._v("使用内联元素隔离父子元素")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(292),alt:"1557566225159"}})]),t._v(" "),n("h3",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),n("p",[t._v("div 的高度：由其内部文档流中元素总和决定的。")]),t._v(" "),n("p",[t._v("脱离文档流：主要有三种")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("flota:left")]),t._v(" 浮动元素脱离文档流")]),t._v(" "),n("li",[n("code",[t._v("position:absolute / fixed")]),t._v(" 绝对定位脱离文档流")])]),t._v(" "),n("h3",{attrs:{id:"css-调试方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css-调试方法"}},[t._v("#")]),t._v(" CSS 调试方法")]),t._v(" "),n("ul",[n("li",[t._v("border 方法")]),t._v(" "),n("li",[t._v("outline 方法")]),t._v(" "),n("li",[t._v("二者区别： outline 设置边框宽度，不会占据盒模型中的宽度。 border 的宽度会占据盒模型中的宽度。")])])])}),[],!1,null,null,null);s.default=p.exports}}]);