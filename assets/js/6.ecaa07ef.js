(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{353:function(t,a,e){t.exports=e.p+"assets/img/1558600647136.3a5ccec8.png"},354:function(t,a,e){t.exports=e.p+"assets/img/1558709704952.95721aaf.png"},355:function(t,a,e){t.exports=e.p+"assets/img/1558709778636.33f1e0e9.png"},356:function(t,a,e){t.exports=e.p+"assets/img/1558710029447.f006e655.png"},357:function(t,a,e){t.exports=e.p+"assets/img/1558711967620.876cc4fe.png"},358:function(t,a,e){t.exports=e.p+"assets/img/1558712140347.643a8b25.png"},359:function(t,a,e){t.exports=e.p+"assets/img/1558793493497.db198781.png"},360:function(t,a,e){t.exports=e.p+"assets/img/1558793527407.6f23d62f.png"},361:function(t,a,e){t.exports=e.p+"assets/img/1558794303052.730926f0.png"},362:function(t,a,e){t.exports=e.p+"assets/img/1558794319596.c7315f6d.png"},363:function(t,a,e){t.exports=e.p+"assets/img/1558880016774.895ebe4b.png"},364:function(t,a,e){t.exports=e.p+"assets/img/1558880043817.b4a796c8.png"},365:function(t,a,e){t.exports=e.p+"assets/img/1558880259667.2d78d7fe.png"},366:function(t,a,e){t.exports=e.p+"assets/img/1558880378366.cea6941b.png"},367:function(t,a,e){t.exports=e.p+"assets/img/1558880398902.8b88ef01.png"},368:function(t,a,e){t.exports=e.p+"assets/img/1558880568530.4fe798aa.png"},369:function(t,a,e){t.exports=e.p+"assets/img/1558881892806.20155245.png"},370:function(t,a,e){t.exports=e.p+"assets/img/1558881966312.c91673eb.png"},371:function(t,a,e){t.exports=e.p+"assets/img/1558882148449.126e012f.png"},372:function(t,a,e){t.exports=e.p+"assets/img/20190726151937.3e57045b.png"},373:function(t,a,e){t.exports=e.p+"assets/img/20190726151756.9ad552f8.png"},374:function(t,a,e){t.exports=e.p+"assets/img/20190726171913.396bfea0.png"},375:function(t,a,e){t.exports=e.p+"assets/img/20190726194259.3a5997a1.png"},492:function(t,a,e){"use strict";e.r(a);var s=e(0),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vim学习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim学习"}},[t._v("#")]),t._v(" Vim学习")]),t._v(" "),s("blockquote",[s("p",[t._v("学习教程参考慕课网 "),s("a",{attrs:{href:"https://www.imooc.com/learn/1129",target:"_blank",rel:"noopener noreferrer"}},[t._v("玩转Vim 从放弃到爱不释手"),s("OutboundLink")],1),t._v(" ，此处为学习笔记")])]),t._v(" "),s("h2",{attrs:{id:"_01-玩转-vim-从放弃到爱不释手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_01-玩转-vim-从放弃到爱不释手"}},[t._v("#")]),t._v(" 01-玩转 Vim 从放弃到爱不释手")]),t._v(" "),s("h3",{attrs:{id:"前置知识：几种模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前置知识：几种模式"}},[t._v("#")]),t._v(" 前置知识：几种模式")]),t._v(" "),s("ul",[s("li",[t._v("普通（浏览）模式")]),t._v(" "),s("li",[t._v("插入模式")]),t._v(" "),s("li",[t._v("可视化模式")])]),t._v(" "),s("h2",{attrs:{id:"_02-初识-vim，想说爱你不容易"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_02-初识-vim，想说爱你不容易"}},[t._v("#")]),t._v(" 02-初识 Vim，想说爱你不容易")]),t._v(" "),s("p",[t._v("【课程 2-1 】")]),t._v(" "),s("h3",{attrs:{id:"几条常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#几条常用命令"}},[t._v("#")]),t._v(" 几条常用命令")]),t._v(" "),s("ol",[s("li",[t._v("使用字母 a / i / o 进入插入模式")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("命令")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("小写 i")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("光标前面插入")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("大写 I")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("光标所在 【行首】插入")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("小写 a")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("光标后插入")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("大写 A")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("光标所在 【行末】插入")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("小写 o")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("光标【下一行】 开新行")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("大写 O")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("光标【上一行】 新开行")])])])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("设置行号：normal 模式下   "),s("code",[t._v(":set nu")]),t._v("  （默认是没有行号的）")]),t._v(" "),s("li",[t._v("全局替换：normal 模式下 "),s("code",[t._v(":% s/java/python/g")]),t._v(" ，表示全局情况下，将所有 "),s("code",[t._v("java")]),t._v(" 换成 "),s("code",[t._v("python")]),t._v(" ，其中，"),s("code",[t._v(":% s")]),t._v(" 表示替换, "),s("code",[t._v("/g")]),t._v(" 表示全局")])]),t._v(" "),s("p",[t._v("【课程 2-2】")]),t._v(" "),s("h3",{attrs:{id:"visual-模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#visual-模式"}},[t._v("#")]),t._v(" Visual 模式")]),t._v(" "),s("p",[t._v("按下字母 "),s("code",[t._v("v")]),t._v(" 进入 visual 模式")]),t._v(" "),s("p",[t._v("按下方向键即可对字符进行选择，常用操作：选择（整行），删除，复制，粘贴")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("大写字母 V")]),t._v(" "),s("td",[t._v("选择整行")])]),t._v(" "),s("tr",[s("td",[t._v("小写字母 y")]),t._v(" "),s("td",[t._v("复制当前选择")])]),t._v(" "),s("tr",[s("td",[t._v("小写字母 d")]),t._v(" "),s("td",[t._v("删除选中")])]),t._v(" "),s("tr",[s("td",[t._v("Ctrl + v")]),t._v(" "),s("td",[t._v("块状选择")])])])]),t._v(" "),s("p",[t._v("【课程 2-3】")]),t._v(" "),s("h3",{attrs:{id:"vim-插入模式小技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim-插入模式小技巧"}},[t._v("#")]),t._v(" Vim 插入模式小技巧")]),t._v(" "),s("ol",[s("li",[t._v("使用字母 a / i / o 进入插入模式")]),t._v(" "),s("li",[t._v("使用 ：\n"),s("ol",[s("li",[t._v("Ctrl + h 删除上一个字符")]),t._v(" "),s("li",[t._v("Ctrl + w 删除上一个单词")]),t._v(" "),s("li",[t._v("Ctrl + u 删除当前行")]),t._v(" "),s("li",[s("strong",[t._v("以上命令可以适用在 Linux 终端 bash 上")])])])])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拓展：在终端下，还有一些别的快捷键命令：")]),t._v("\nCtrl + a 快速移动到开头\nCtrl + e 快速移动到结尾\nCtrl + b 往前移动\nCtrl + f 往后移动\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("从 insert  模式快速切换到 normal 模式（不建议使用 Esc 的方式）")]),t._v(" "),s("ol",[s("li",[t._v("Ctrl + c   （可能导致和某些插件快捷键冲突）")]),t._v(" "),s("li",[t._v("或")]),t._v(" "),s("li",[t._v("Ctrl + [")])])]),t._v(" "),s("li",[s("p",[t._v("使用 "),s("code",[t._v("gi")]),t._v(" 快速回到【刚才编辑的位置】")])]),t._v(" "),s("li",[s("p",[t._v("键盘选择参考：")]),t._v(" "),s("ol",[s("li",[t._v("HHKB")]),t._v(" "),s("li",[t._v("Poker2")])])]),t._v(" "),s("li",[s("p",[t._v("让键盘适应工具：")]),t._v(" "),s("ol",[s("li",[t._v("选择 Esc 和 Ctrl 比较容易触碰到的键盘")]),t._v(" "),s("li",[t._v("使用 Vim 你可以使用 HHKB或者Poker2这种迷你键盘")]),t._v(" "),s("li",[t._v("使用软件修改键位，比如 CapsLock 改成频繁使用到的 Ctrl")])])]),t._v(" "),s("li",[s("p",[t._v("熟能生巧，如何练习？（形成肌肉记忆）")]),t._v(" "),s("ol",[s("li",[t._v("Linux 和 Vim下有非常多的快捷键简化工作")]),t._v(" "),s("li",[t._v("尝试抛弃你的退格键，使用 Ctrl 快捷键来完成你的编辑删除工作")]),t._v(" "),s("li",[t._v("尝试修改而不是强迫自己使用难用的键位")])])])]),t._v(" "),s("p",[t._v("【2-4】 快速移动大法")]),t._v(" "),s("h3",{attrs:{id:"快速移动大法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快速移动大法"}},[t._v("#")]),t._v(" 快速移动大法")]),t._v(" "),s("ol",[s("li",[t._v("适应传统的 hjkl 大法")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(353),alt:"1558600647136.png"}})]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("命令")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("word 和 WORD  的区别")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("word 指【非空白符】分割的单词，WORD 指以【空白符【分割的单词")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("小写字母 w")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("移到下一个 word 开头")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("大写 W")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("移到下一个 WORD 开头")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("小写 e")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("移到下一个 word 结尾")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("大写 E")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("移到下一个 WORD 结尾")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("小写字母 b  （可以理解为 backword）")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("回到上一个 word 开头")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("大写字母 B")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("回到上一个 WORD 开头")])])])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("设置语法高亮： "),s("code",[t._v(":syntax on")])])]),t._v(" "),s("p",[t._v("【课程 2-4】")]),t._v(" "),s("h3",{attrs:{id:"行间快速移动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行间快速移动"}},[t._v("#")]),t._v(" 行间快速移动")]),t._v(" "),s("ol",[s("li",[t._v("本质："),s("strong",[t._v("同一行快速移动的方式其实是搜索一个字符并快速移动到该字符")]),t._v("。")])]),t._v(" "),s("ul",[s("li",[t._v("使用 "),s("code",[t._v("f{char}")]),t._v(" 可以移动到 "),s("code",[t._v("char")]),t._v(" 字符上， "),s("code",[t._v("t")]),t._v(" 移动到 "),s("code",[t._v("char")]),t._v(" 的前一个字符（t表示 until）")]),t._v(" "),s("li",[t._v("如果第一次没搜到，可以用 "),s("code",[t._v("(;)/逗号(,)")]),t._v(" 继续搜改行下一个 / 上一个  （分号或者逗号）")]),t._v(" "),s("li",[t._v("大写的 F 表示反过来搜前面的字符")])]),t._v(" "),s("p",[t._v("记住，以上操作都是在"),s("strong",[t._v("同一行")]),t._v("中快速移动")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("Vim 水平移动")])]),t._v(" "),s("ul",[s("li",[t._v("0 移动到行首第一个字符，^ 移动到第一个非空白字符，或者是 替换方案，使用 0 ，然后按下 w 即可移动到行首非空白字符")]),t._v(" "),s("li",[t._v("$ 移动到行尾，g_ 移动到行尾非空白字符")]),t._v(" "),s("li",[t._v("通常，"),s("strong",[t._v("记住 0 和 $")]),t._v(" 就可以满足日常需求了")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("Vim 垂直移动（使用场景不太多）")])]),t._v(" "),s("p",[t._v("我们还可以在句子(sentences) 和 段落(paragraph) 间移动（不常用）")]),t._v(" "),s("ul",[s("li",[t._v("使用括号 "),s("code",[t._v("()")]),t._v("在句子中移动，你可以用 "),s("code",[t._v(":help(")]),t._v(" 来查看帮助")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("{}")]),t._v(" 在段落之间进行移动")]),t._v(" "),s("li",[t._v("后面插件章节，会讲述如何使用 "),s("code",[t._v("easy-motion")]),t._v(" 插件移动，这些命令就不用记啦~")])]),t._v(" "),s("p",[t._v("3.页面移动")]),t._v(" "),s("p",[t._v("翻页命令太多，根据 2/8 定律，记住常见的即可满足需求")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("gg / G")]),t._v(" 移动到**文件（页面）**开头和结尾，你可以使用 Ctrol + o 快速返回")]),t._v(" "),s("li",[t._v("H / M / L 跳转到**【屏幕】**开头 （head） ，中间（Middle）和结尾（Lower）")]),t._v(" "),s("li",[t._v("Ctrl  + u.  Ctr + f. 上下翻页(upward / forward)。zz 把屏幕设为中间。")])]),t._v(" "),s("p",[t._v("以上，对上述命令勤加练习，形成肌肉记忆。")]),t._v(" "),s("p",[t._v("【课程2-5】")]),t._v(" "),s("h3",{attrs:{id:"vim-快速增删改查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim-快速增删改查"}},[t._v("#")]),t._v(" Vim 快速增删改查")]),t._v(" "),s("ol",[s("li",[t._v("Vim 快速删除一个字符或一个单词")])]),t._v(" "),s("ul",[s("li",[t._v("Vim 在 normal 模式下使用 x 快速删除一个字符")]),t._v(" "),s("li",[t._v("使用 d (delete) 配合文本对象快速删除一个单词，如： "),s("code",[t._v("daw")]),t._v(" 表示 "),s("code",[t._v("d around word")]),t._v(" 删除光标所在的单词包括其空格\n"),s("ul",[s("li",[s("code",[t._v("daw")]),t._v(" 删除光标所在的单词包括其空格")]),t._v(" "),s("li",[s("code",[t._v("dw")]),t._v("  删除光标以后的一个单词包括空格")]),t._v(" "),s("li",[s("code",[t._v("diw")]),t._v(" 删除光标所在的单词，不包括空格")]),t._v(" "),s("li",[s("code",[t._v("d$")]),t._v(" 快速删除到行尾")]),t._v(" "),s("li",[s("code",[t._v("d0")]),t._v(" 快速删除到行头")]),t._v(" "),s("li",[s("code",[t._v("数字x")]),t._v(" 表示删除几个字符，如 "),s("code",[t._v("2x")]),t._v(" 表示删除光标往后的2个字符")])])]),t._v(" "),s("li",[t._v("d 和 x 都可以配合数字执行多次")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("Vim 快速修改")])]),t._v(" "),s("ul",[s("li",[t._v("常用有三个： r (replace) ，c (change) ，s (substitude)")]),t._v(" "),s("li",[t._v("normal 模式下，使用 r 可以替换一个字符。s 替换并插入模式")]),t._v(" "),s("li",[t._v("使用 c 表示配合文本对象，我们可以快速进行修改")]),t._v(" "),s("li",[t._v("结合数字使用："),s("code",[t._v("2c")]),t._v(",  "),s("code",[t._v("3s")]),t._v(" , "),s("code",[t._v("4r")]),t._v(" "),s("ul",[s("li",[t._v("大写字母 R ，不断替换后面的字符")]),t._v(" "),s("li",[t._v("大写字母 S，删除当前行，并进入插入模式")]),t._v(" "),s("li",[t._v("大写字母 C, 删除当前行，并进入插入模式")])])]),t._v(" "),s("li",[t._v("常用命令:\n"),s("ul",[s("li",[s("code",[t._v("cw 或者 caw")]),t._v(" 修改一个单词")]),t._v(" "),s("li",[s("code",[t._v("rw 或者 raw")])]),t._v(" "),s("li",[s("code",[t._v('ct)"')]),t._v(" 修改到 "),s("code",[t._v(")")])])])])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("查询单词也是一种常用操作")])]),t._v(" "),s("blockquote",[s("p",[t._v("通常会设置 "),s("code",[t._v(":set hls")]),t._v(" 表示设置搜索关键词高亮，一般都会放在 vim 配置中，不需要单独设置")]),t._v(" "),s("p",[t._v("通常会设置 "),s("code",[t._v(":set incsearch")]),t._v(" 表示增量搜索，即会变搜索边高亮，同样，都会放在 vim 默认配置中")])]),t._v(" "),s("ul",[s("li",[t._v("使用 "),s("code",[t._v("/")]),t._v(" 或者 "),s("code",[t._v("?")]),t._v(" 进行前向或者反向搜索")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("n/N")]),t._v(" 跳转到下一个或上一个匹配")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("*")]),t._v(" 或者 "),s("code",[t._v("#")]),t._v(" 进行当前单词的前向和后向匹配")])]),t._v(" "),s("p",[t._v("【课程 2-6 】")]),t._v(" "),s("h3",{attrs:{id:"vim-如何搜索替换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim-如何搜索替换"}},[t._v("#")]),t._v(" Vim 如何搜索替换")]),t._v(" "),s("blockquote",[s("p",[t._v("substitude 命令允许我们查找并且替换掉文本，并且支持正则表达式")])]),t._v(" "),s("p",[t._v("格式如下：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("[range]s[ubstitude]/{pattern}/{string}/[flags]")]),t._v(" 其中 "),s("code",[t._v(":")]),t._v("表示在命令模式下，"),s("code",[t._v("range")]),t._v(" 表示范围，"),s("code",[t._v("/{pattern}")]),t._v(" 表示模式， "),s("code",[t._v("string")]),t._v(" 表示要替后的文本，"),s("code",[t._v("[flags]")]),t._v(" 表示替换的标志位\n"),s("ul",[s("li",[s("code",[t._v("range")]),t._v(" 表示范围，如："),s("code",[t._v("10,20")]),t._v(" 表示 10-20 行，"),s("code",[t._v("%")]),t._v(" 表示全部")]),t._v(" "),s("li",[s("code",[t._v("pattern")]),t._v(" 表示要替换的模式")]),t._v(" "),s("li",[s("code",[t._v("string")]),t._v("  是替换后的文本")]),t._v(" "),s("li",[s("code",[t._v("flag")]),t._v(" 有几个常用的标志\n"),s("ul",[s("li",[s("code",[t._v("g(global)")]),t._v(" 表示全局范围内执行")]),t._v(" "),s("li",[s("code",[t._v("c(confirm)")]),t._v(" 表示确认，可以确认或者拒绝修改")]),t._v(" "),s("li",[s("code",[t._v("n(number)")]),t._v(" 表示 number，报告匹配到的次数而不是替换，可以用来查询匹配次数")])])])])])]),t._v(" "),s("p",[t._v("举例如下：")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v(":% s/self/this/g")]),t._v(" 表示将本文件中全部字符 中的 "),s("code",[t._v("self")]),t._v(" 在  全局模式下 替换成 "),s("code",[t._v("this")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v(":set num")]),t._v(" 先设置行号，然后")])]),t._v(" "),s("li",[s("p",[s("code",[t._v(":1,6 s/self/this/g")]),t._v(" 将第 1-6 行的 "),s("code",[t._v("self")]),t._v(" 换成 "),s("code",[t._v("this")])])])]),t._v(" "),s("ul",[s("li",[t._v("统计当前文本中某个字符出现的次数\n"),s("ul",[s("li",[s("code",[t._v(":1,6 s/self//n")]),t._v(" 这里，"),s("code",[t._v("/self")]),t._v(" 后面的 "),s("code",[t._v("/")]),t._v(" 内容为空，然后 "),s("code",[t._v("[flag]")]),t._v(" 使用 "),s("code",[t._v("n")]),t._v(" 即可统计 "),s("code",[t._v("self")]),t._v("  出现的次数")])])]),t._v(" "),s("li",[t._v("使用正则的方法，替换单个单词而非含有该单词的其它方法 "),s("code",[t._v(":% s/\\<quack\\>/jiao/g")])])]),t._v(" "),s("p",[t._v("这样，下面的文本 中的 "),s("code",[t._v("quack")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(354),alt:"1558709704952"}})]),t._v(" "),s("p",[t._v("就会变成")]),t._v(" "),s("p",[s("img",{attrs:{src:e(355),alt:"1558709778636"}})]),t._v(" "),s("p",[t._v("【课程 2-7】")]),t._v(" "),s("h3",{attrs:{id:"vim-多文件操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim-多文件操作"}},[t._v("#")]),t._v(" Vim 多文件操作")]),t._v(" "),s("p",[t._v("首先，了解一下 Vim 中的几个概念")]),t._v(" "),s("ul",[s("li",[t._v("Buffer 表示打开的一个文件的内存缓冲区")]),t._v(" "),s("li",[t._v("Window 窗口是 Buffer 可视化的分割区域")]),t._v(" "),s("li",[t._v("Tab 可以组织窗口为一个工作区")])]),t._v(" "),s("p",[t._v("如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:e(356),alt:"1558710029447"}})]),t._v(" "),s("p",[t._v("详细解释为：")]),t._v(" "),s("ol",[s("li",[t._v("Buffer ——什么是缓冲区？")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Vim 打开一个文件后加载文件到内容缓冲区")])]),t._v(" "),s("li",[s("p",[t._v("之后的修改都是针对内存中的缓冲区，并不会直接保存到文件")])]),t._v(" "),s("li",[s("p",[t._v("直到我们执行 "),s("code",[t._v(":w（write)")]),t._v(" 的时候才会把修改内容写到文件里")])])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("如何在 Buffer 之间进行切换呢？")])]),t._v(" "),s("ul",[s("li",[t._v("使用 "),s("code",[t._v(":ls")]),t._v(" 会列举当前缓冲区，然后使用 "),s("code",[t._v(":b n")]),t._v(" 跳转到第 n 个缓冲区")]),t._v(" "),s("li",[s("code",[t._v(":bpre :bnext :bfirst :blast")]),t._v(" 分表表示跳转到前一个，下一个，第一个，最后一个")]),t._v(" "),s("li",[t._v("或者可以使用 "),s("code",[t._v(":b buffer_name")]),t._v(" 加上 tab 补全来跳转")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("具体使用步骤：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("vim-test/\n├── a.txt\n├── b.txt\n└── vim.test\n")])])]),s("ul",[s("li",[s("code",[t._v("vi a.txt")]),t._v(" "),s("ul",[s("li",[s("code",[t._v(":e b.txt")]),t._v(" 此时改为编辑当前目录下的 b.txt 文件，此时，打开了 2 个缓冲区，分别为 a.txt 和 b.txt")]),t._v(" "),s("li",[s("code",[t._v(":ls")]),t._v("  查看缓冲区，看到 "),s("code",[t._v("a.txt 和 b.txt")])]),t._v(" "),s("li",[s("code",[t._v(":bpre")]),t._v(" 使用 Tab 自动补全为 "),s("code",[t._v(":bprevious")]),t._v(" 即 切换到前一个缓冲区")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v(":e a.txt")]),t._v(" 编辑文件 a.txt")])])])]),t._v(" "),s("hr"),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("Window 窗口")])]),t._v(" "),s("p",[t._v("窗口是可视化的分割区域：")]),t._v(" "),s("ul",[s("li",[t._v("一个缓冲区可以分割成多个窗口，每个窗口哦也可以打开不同的缓冲区")]),t._v(" "),s("li",[s("code",[t._v("<Ctrl + w>s")]),t._v(" 水平分割，"),s("code",[t._v("<Ctrl + w> v")]),t._v(" 垂直分割。或者 "),s("code",[t._v(":sp")]),t._v(" 和 "),s("code",[t._v(":vs")]),t._v("  其中，s 表示 split，v 表示 vertical")]),t._v(" "),s("li",[t._v("每个窗口可以继续被无限分割（看你屏幕够不够大）")])]),t._v(" "),s("p",[t._v("（1）如何切换窗口")]),t._v(" "),s("p",[s("img",{attrs:{src:e(357),alt:"1558711967620"}})]),t._v(" "),s("p",[t._v("（2）如何重排窗口")]),t._v(" "),s("p",[s("img",{attrs:{src:e(358),alt:"1558712140347"}})]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v("Tab （标签页）将窗口分组")])]),t._v(" "),s("p",[t._v("Tab 是一个可以容纳一系列窗口的容器 ("),s("code",[t._v(":h tabpage")]),t._v(")")]),t._v(" "),s("ul",[s("li",[t._v("Vim 的 Tab 和其他编辑器不太一样，可以想象成 Linux 的虚拟桌面")]),t._v(" "),s("li",[t._v("比如一个 Tab 全用来编辑 Python 文件，一个 Tab 全是 HTML 文件")]),t._v(" "),s("li",[t._v("相比窗口，"),s("strong",[t._v("Tab 一般用的比较少")]),t._v("，Tab 太多管理起来也麻烦。")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(359),alt:"1558793493497"}})]),t._v(" "),s("p",[s("img",{attrs:{src:e(360),alt:"1558793527407"}})]),t._v(" "),s("p",[t._v("延伸：插件篇我们会配合 CtrlP 插件和 nerdtree 快速操作多个文件")]),t._v(" "),s("p",[t._v("【课程 2-8】")]),t._v(" "),s("h3",{attrs:{id:"什么是-vim-的-text-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-vim-的-text-object"}},[t._v("#")]),t._v(" 什么是 Vim 的 text object")]),t._v(" "),s("ol",[s("li",[t._v("如果你学过主流的编程语言，一定知道面向对象编程")])]),t._v(" "),s("ul",[s("li",[t._v("Vim 里面也有面向对象的概念，比如一个单词，一短句子，一个段落")]),t._v(" "),s("li",[t._v("很多其他编辑器经常只能操作单个字符来修改文本，比较低效")]),t._v(" "),s("li",[t._v("通过操作文本对象来修改比只操作单个字符要高效")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("之前我们已经使用过文本对象了，回忆一下 "),s("code",[t._v("dw")]),t._v(" （删除一个单词）")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("[number]<command>[text object]")])]),t._v(" "),s("li",[t._v("number 表示次数，command 是命令， d (delete) ，c (change), y (yank)")]),t._v(" "),s("li",[t._v("text object 是要操作的文本对象，比如单词 w ，句子 s ，段落 p")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(361),alt:"1558794303052"}})]),t._v(" "),s("p",[t._v("通过示例来学习")]),t._v(" "),s("p",[s("img",{attrs:{src:e(362),alt:"1558794319596"}})]),t._v(" "),s("p",[t._v("课后练习：")]),t._v(" "),s("ul",[s("li",[t._v("回忆一下如何删除一个单词？")]),t._v(" "),s("li",[t._v("在你的 Vim 中尝试使用文本对象快速增、删、改 一个单词")]),t._v(" "),s("li",[t._v("延伸：有些插件拓展了文本对象，比如 vim-go 可以使用 f 表示一个函数")])]),t._v(" "),s("p",[t._v("【课程 2-9】")]),t._v(" "),s("h3",{attrs:{id:"vim-复制粘贴与寄存器的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim-复制粘贴与寄存器的使用"}},[t._v("#")]),t._v(" Vim 复制粘贴与寄存器的使用")]),t._v(" "),s("ol",[s("li",[t._v("初学者会感觉 Vim  复制粘贴比较奇怪，先从 "),s("strong",[t._v("normal 模式")]),t._v("开始学习")])]),t._v(" "),s("ul",[s("li",[t._v("normal 模式下复制粘贴分别使用 y(yank) 和 p(put) ，剪贴 d 和 p")]),t._v(" "),s("li",[t._v("我们可以使用 v(visual) 命令选中所要复制的地方，然后使用 p 粘贴。")]),t._v(" "),s("li",[t._v("配合文本对象：比如使用 "),s("code",[t._v("yiw")]),t._v(" 复制一个单词，yy 复制一行")])]),t._v(" "),s("p",[s("strong",[t._v("注意：Vim 里的剪贴（cut） 复制 (copy)  粘贴 (paste) 分别是 delete / yank / put")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("很多人会在使用鼠标进行选中，然后使用 Ctrl + v，或者 command + v 粘贴")])]),t._v(" "),s("ul",[s("li",[t._v("这个和其他文本编辑器差不多， 但是粘贴代码有个坑：")]),t._v(" "),s("li",[t._v("很多人在 "),s("code",[t._v(".vimrc")]),t._v(" 中设置了 autoindent ，粘贴 Python 代码锁紧混乱")]),t._v(" "),s("li",[t._v("这个时候，需要使用 "),s("code",[t._v(":set paste")]),t._v(" 和 "),s("code",[t._v(":set nopaste")]),t._v(" 解决")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("什么是 Vim 的寄存器？")])]),t._v(" "),s("p",[t._v("你有没有好奇？Vim 在normal 模式下复制 / 粘贴 的内容去哪了？")]),t._v(" "),s("ul",[s("li",[t._v("Vim 里操作的"),s("strong",[t._v("是寄存器而不是系统剪贴板")]),t._v("，这和其他编辑器不同。")]),t._v(" "),s("li",[t._v("默认我们使用 d 删除或者 y 复制的内容都放到了 “无名寄存器”中")]),t._v(" "),s("li",[t._v("用 x 删除一个字符放到无名寄存器，然后 p 粘贴，可以调换字符")])]),t._v(" "),s("p",[t._v("深入寄存器：")]),t._v(" "),s("p",[t._v("Vim 里不使用单一剪贴板进行剪贴、复制、粘贴，而是多寄存器")]),t._v(" "),s("ul",[s("li",[t._v("通过 "),s("code",[t._v('"{register}')]),t._v(" 前缀可以指定寄存器，不指定默认用无名寄存器")]),t._v(" "),s("li",[t._v("比如，使用 "),s("code",[t._v('"ayiw')]),t._v(" 复制一个单词到寄存器 a 中，"),s("code",[t._v('"bdd')]),t._v(" 删除当前行到寄存器 b 中")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v(":reg a")]),t._v(" 可查看寄存器 a 中的内容")]),t._v(" "),s("li",[t._v("Vim 中，"),s("code",[t._v('""')]),t._v(" 表示无名寄存器，缺省使用。 "),s("code",[t._v('"" p')]),t._v("  其实等同于 p")])]),t._v(" "),s("p",[t._v("其他常见寄存器")]),t._v(" "),s("p",[t._v("除了有名的寄存器 a-z，Vim 还有一些其他常见寄存器")]),t._v(" "),s("ul",[s("li",[t._v("复制专用寄存器，"),s("code",[t._v('"0')]),t._v(" 使用 y 复制文本同时会被拷到复制寄存器 0")]),t._v(" "),s("li",[t._v("系统剪贴板， "),s("code",[t._v('"+')]),t._v(" 可以在复制前加上 "),s("code",[t._v('"+')]),t._v(" 复制到系统剪贴板")]),t._v(" "),s("li",[t._v("其他一些寄存器，比如 "),s("code",[t._v('"%')]),t._v(" 当前文件名， "),s("code",[t._v('".')]),t._v(" 上次插入的文本")])]),t._v(" "),s("blockquote",[s("p",[t._v("将文本复制到系统剪贴板之前，需要先确定是支持改特性，使用 "),s("code",[t._v("echo: has('clipboard')")]),t._v(" 查看，输出结果为 1 表示支持该特性。")])]),t._v(" "),s("p",[s("strong",[t._v("使用 "),s("code",[t._v(":set clipboard=unnamed")]),t._v(" 可以让你直接复制粘贴系统剪贴板内容")])]),t._v(" "),s("p",[t._v("【课程 2-10】")]),t._v(" "),s("h3",{attrs:{id:"vim如何使用宏完成强大的批量操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim如何使用宏完成强大的批量操作"}},[t._v("#")]),t._v(" Vim如何使用宏完成强大的批量操作")]),t._v(" "),s("p",[t._v("如何使用 宏")]),t._v(" "),s("ul",[s("li",[t._v("Vim 使用 q 来录制，同时也是 q 结束录制")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("q{register}")]),t._v(" 选择要保存的寄存器，把录制的命令保存其中")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("@{register}")]),t._v(" 回放寄存器中保存的一系列命令")])]),t._v(" "),s("p",[t._v("具体例子，如下，将所有连接都加上双引号")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("https://www.imooc.com/video/19455\nhttps://www.imooc.com/video/19455\nhttps://www.imooc.com/video/19455\nhttps://www.imooc.com/video/19455\nhttps://www.imooc.com/video/19455\nhttps://www.imooc.com/video/19455\nhttps://www.imooc.com/video/19455\nhttps://www.imooc.com/video/19455\nhttps://www.imooc.com/video/19455\nhttps://www.imooc.com/video/19455\nhttps://www.imooc.com/video/19455\n")])])]),s("p",[t._v("首先，我们示例给一行加上双引号")]),t._v(" "),s("ul",[s("li",[t._v("使用 "),s("code",[t._v("I")]),t._v(" 来到开头，来到行首并进入插入模式，再按下双引号")]),t._v(" "),s("li",[t._v("按下 Esc 回到 normal 模式")]),t._v(" "),s("li",[t._v("按下 A 回到结尾，到达行尾并进入插入模式，按下双引号")]),t._v(" "),s("li",[t._v("按下 Esc 回到 normal 模式")])]),t._v(" "),s("p",[t._v("如何把所有操作回放到所有行呢？使用 宏的方式")]),t._v(" "),s("ul",[s("li",[t._v("按下 q 开启寄存器，按下名字 a，左下角有 "),s("code",[t._v("recording @a")])]),t._v(" "),s("li",[t._v("重复上面操作\n"),s("ul",[s("li",[t._v("使用 "),s("code",[t._v("I")]),t._v(" 来到开头，来到行首并进入插入模式，再按下双引号")]),t._v(" "),s("li",[t._v("按下 Esc 回到 normal 模式")]),t._v(" "),s("li",[t._v("按下 A 回到结尾，到达行尾并进入插入模式，按下双引号")]),t._v(" "),s("li",[t._v("按下 Esc 回到 normal 模式")])])]),t._v(" "),s("li",[t._v("按下 q 结束录制")])]),t._v(" "),s("p",[t._v("接下来，要在每一行回放该宏，则可以使用 在命令行下执行 normal 模式下的命令")]),t._v(" "),s("ul",[s("li",[t._v("按下 shift + v，实现行选，按下大写字母 G 到最后一行")]),t._v(" "),s("li",[t._v("按下 "),s("code",[t._v(":")]),t._v(" 则会自动变成 "),s("code",[t._v(":'<,>'")])]),t._v(" "),s("li",[t._v("输入 "),s("code",[t._v("normal @a")]),t._v(",变成 "),s("code",[t._v(":'<,>normal @a'")])]),t._v(" "),s("li",[t._v("回车，即可完成 在所有行实现给链接加上双引号")])]),t._v(" "),s("p",[t._v("以上，可以使用另一种方式实现")]),t._v(" "),s("ul",[s("li",[t._v("按下 V 行选，按下 G，行选到文件末尾")]),t._v(" "),s("li",[t._v("输入 "),s("code",[t._v(':normal I"')]),t._v(" ，回车")]),t._v(" "),s("li",[t._v("输入 "),s("code",[t._v(':normal A"')]),t._v(" ，回车 （也可以使用 Ctrl + P，回到上一个命令 "),s("code",[t._v(':normal I"')]),t._v(" 然后修改后面为 "),s("code",[t._v(':normal A"')]),t._v(" 即可）")])]),t._v(" "),s("p",[t._v("【课程 2-11】")]),t._v(" "),s("h3",{attrs:{id:"什么是补全？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是补全？"}},[t._v("#")]),t._v(" 什么是补全？")]),t._v(" "),s("p",[s("img",{attrs:{src:e(363),alt:"1558880016774"}})]),t._v(" "),s("p",[s("img",{attrs:{src:e(364),alt:"1558880043817"}})]),t._v(" "),s("p",[s("img",{attrs:{src:e(365),alt:"1558880259667"}})]),t._v(" "),s("p",[t._v("【课程2-12】")]),t._v(" "),s("h3",{attrs:{id:"给-vim-配色"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#给-vim-配色"}},[t._v("#")]),t._v(" 给 Vim 配色")]),t._v(" "),s("p",[s("img",{attrs:{src:e(366),alt:"1558880378366"}})]),t._v(" "),s("p",[s("img",{attrs:{src:e(367),alt:"1558880398902"}})]),t._v(" "),s("p",[s("img",{attrs:{src:e(368),alt:"1558880568530"}})]),t._v(" "),s("p",[t._v("【课程 2-13】")]),t._v(" "),s("h3",{attrs:{id:"裸的-vim-也很强"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#裸的-vim-也很强"}},[t._v("#")]),t._v(" 裸的 Vim 也很强")]),t._v(" "),s("p",[t._v("学习 Vim 之前，先对打字指法和盲打很熟悉")]),t._v(" "),s("ul",[s("li",[t._v("编辑代码，脑子一般比手快，盲打有利于跟上你的大脑速度")]),t._v(" "),s("li",[t._v("裸的 Vim 也有很多强大的功能和使用方式")]),t._v(" "),s("li",[t._v("学会了 Vim ，你可以再 IDE 上安装 Vim 插件，几乎所有流行的编辑器和 IDE 工具都支持 Vim 插件")])]),t._v(" "),s("p",[t._v("通过以上学习，下一步，我们该学习：")]),t._v(" "),s("ul",[s("li",[t._v("之后，我们来学习 Vim 配置，我的 Vim 我做主")]),t._v(" "),s("li",[t._v("Vim 也在与时俱进，一起探索 Vim 各种炫酷和方便的插件")]),t._v(" "),s("li",[t._v("用中学，学中用，慢慢形成肌肉记忆")])]),t._v(" "),s("h2",{attrs:{id:"_03-编写-vim-配置，我的-vim-我做主"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_03-编写-vim-配置，我的-vim-我做主"}},[t._v("#")]),t._v(" 03-编写 Vim 配置，我的 Vim 我做主")]),t._v(" "),s("p",[t._v("【课程 3-1】")]),t._v(" "),s("h3",{attrs:{id:"编写-vim-配置，我的-vim-我做主"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编写-vim-配置，我的-vim-我做主"}},[t._v("#")]),t._v(" 编写 Vim 配置，我的 Vim 我做主")]),t._v(" "),s("p",[t._v("如何编写自己的 Vim 配置文件：")]),t._v(" "),s("ul",[s("li",[t._v("Linux / Unix 下建立一个隐藏文件："),s("code",[t._v("vim ~/.vimrc")])]),t._v(" "),s("li",[t._v("windows 系统 "),s("code",[t._v("vim $MYVIMRC")]),t._v(" ，通过环境变量编辑配置文件")]),t._v(" "),s("li",[t._v("接着，我们可以开始自定义自己的配置了")])]),t._v(" "),s("p",[t._v("Vim 配置都包含了什么？")]),t._v(" "),s("p",[t._v("可以开始编辑 Vim 配置文件了，但是需要配置什么呢？")]),t._v(" "),s("ul",[s("li",[t._v("常用设置，比如： "),s("code",[t._v("set nu")]),t._v(" 设置行号，colorscheme hybrid 设置主题")]),t._v(" "),s("li",[t._v("常用的 Vim 映射，比如 "),s("code",[t._v("noremap < leader >w:w<cr>")]),t._v("保存文件")]),t._v(" "),s("li",[t._v("自定义 vimscript 函数（Vim 高手）和插件配置（详情见插件篇）")])]),t._v(" "),s("p",[t._v("首先，是常用的 Vim 配置")]),t._v(" "),s("ul",[s("li",[t._v("我们可以把常用的设置写到 "),s("code",[t._v(".vimrc")]),t._v(" 里避免每次打开 vim 重新设置")]),t._v(" "),s("li",[t._v("比如设置行号 "),s("code",[t._v("set nu")]),t._v(" ，设置主题 "),s("code",[t._v("colorsheme hybrid")])]),t._v(" "),s("li",[t._v("Vim 里有非常多的这种配置，此时需要参考别人的配置")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(369),alt:"1558881892806"}})]),t._v(" "),s("p",[s("img",{attrs:{src:e(370),alt:"1558881966312"}})]),t._v(" "),s("p",[s("img",{attrs:{src:e(371),alt:"1558882148449"}})]),t._v(" "),s("p",[t._v("【课程 3-2】")]),t._v(" "),s("h3",{attrs:{id:"vim-映射迷人眼（未完成，笔记没写完）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim-映射迷人眼（未完成，笔记没写完）"}},[t._v("#")]),t._v(" Vim 映射迷人眼（未完成，笔记没写完）")]),t._v(" "),s("blockquote",[s("p",[t._v("映射可以让你的 Vim 按照你想要的的方式工作。")])]),t._v(" "),s("p",[t._v("基本映射指的是 normal 模式下的映射，当然还有其他模式下的映射")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("使用 map 就可以实现映射。比如 "),s("code",[t._v(":map - x")]),t._v(" 设置后，按下 - 就会删除字符")])]),t._v(" "),s("li",[s("p",[s("code",[t._v(":map <space> viw")]),t._v(" 告诉 vim 按下空格的时候选中整个单词")])]),t._v(" "),s("li",[s("p",[s("code",[t._v(":map <c-d> dd")]),t._v(" 可以使用 ctrl + d 执行 dd 删除一行")])])]),t._v(" "),s("p",[t._v("推荐学习资料："),s("a",{attrs:{href:"http://learnvimscriptthehardway.onefloweroneworld.com/preface.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("VimScript 小书"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"配置-vim，让它更顺手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-vim，让它更顺手"}},[t._v("#")]),t._v(" 配置 Vim，让它更顺手")]),t._v(" "),s("h2",{attrs:{id:"_04-vim-安装和使用插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_04-vim-安装和使用插件"}},[t._v("#")]),t._v(" 04-Vim 安装和使用插件")]),t._v(" "),s("h3",{attrs:{id:"安装插件，竟如此简单"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装插件，竟如此简单"}},[t._v("#")]),t._v(" 安装插件，竟如此简单")]),t._v(" "),s("p",[t._v("使用 Vim-Plug 安装插件")]),t._v(" "),s("blockquote",[s("p",[t._v("学习新东西的最好的方式就是看官方文档示例")])]),t._v(" "),s("ul",[s("li",[t._v("官网："),s("a",{attrs:{href:"https://github.com/junegunn/vim-plug",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vim-plug"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("拷贝以下代码：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\" - Avoid using standard Vim directory names like 'plugin'\ncall plug#begin('~/.vim/plugged')\n\n\"")]),t._v('  插件放在这里\n\n" Initialize plugin system\ncall plug'),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#end()")]),t._v("\n")])])]),s("p",[t._v("安装第一个插件："),s("strong",[t._v("vim-startify")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/mhinz/vim-startify",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-startify"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("安装：\n"),s("ul",[s("li",[t._v("修改 .vimrc 文件，增加该插件名称")]),t._v(" "),s("li",[t._v("重新启动 Vim 或者 source .vimrc 保存，执行 "),s("code",[t._v(":PlugInstall")])]),t._v(" "),s("li",[t._v("安装完成后，退出 vim 再进入 vim ，就可以看到效果啦。(如果遇到报错，重新安装 vim："),s("code",[t._v("sudo apt-get install vim")]),t._v(")")])])])]),t._v(" "),s("p",[t._v(".vimrc 代码如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\" - Avoid using standard Vim directory names like 'plugin'\ncall plug#begin('~/.vim/plugged')\n\nPlug 'mhinz/vim-startify'\n\n\"")]),t._v(" Initialize plugin system\ncall plug"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#end()")]),t._v("\n")])])]),s("h3",{attrs:{id:"如何寻找到自己想要的插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何寻找到自己想要的插件"}},[t._v("#")]),t._v(" 如何寻找到自己想要的插件")]),t._v(" "),s("p",[t._v("推荐网站："),s("a",{attrs:{href:"https://vimawesome.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("VimAwesome"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("方法：")]),t._v(" "),s("ul",[s("li",[t._v("Google 关键词 寻找到想要的插件")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://vimawesome.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("VimAwesome"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("浏览网上开源 Vim 配置借鉴想要的插件")])]),t._v(" "),s("p",[t._v("常用：")]),t._v(" "),s("p",[t._v("nerdtree："),s("a",{attrs:{href:"https://github.com/scrooloose/nerdtree",target:"_blank",rel:"noopener noreferrer"}},[t._v("github-nerdtree"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"vim美化插件：让你的-vim-与众不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim美化插件：让你的-vim-与众不同"}},[t._v("#")]),t._v(" Vim美化插件：让你的 vim 与众不同")]),t._v(" "),s("ul",[s("li",[t._v("修改启动界面：https://github.com/mhinz/vim-startify")]),t._v(" "),s("li",[t._v("状态栏美化：https://github.com/vim-airline/vim-airline")]),t._v(" "),s("li",[t._v("增加代码缩进线条：https://github.com/Yggdroot/indentLine")])]),t._v(" "),s("p",[t._v("bash 代码：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\" - Avoid using standard Vim directory names like 'plugin'\ncall plug#begin('~/.vim/plugged')\n\nPlug 'mhinz/vim-startify'\nPlug 'vim-airline/vim-airline'\nPlug 'vim-airline/vim-airline-themes'\nPlug 'Yggdroot/indentLine'\n\n\"")]),t._v(" Initialize plugin system\ncall plug"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#end()")]),t._v("\n")])])]),s("p",[t._v("Vim 配色方案：")]),t._v(" "),s("p",[t._v("常用方案：")]),t._v(" "),s("ul",[s("li",[t._v("vim-hybrid ：https://github.com/w0ng/vim-hybrid")]),t._v(" "),s("li",[t._v("solarized ： https://github.com/altercation/solarized")]),t._v(" "),s("li",[t._v("gruvbox ： https://github.com/morhetz/gruvbox")])]),t._v(" "),s("p",[t._v("我们选择 hybrid")]),t._v(" "),s("p",[t._v("bash 代码：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\" - Avoid using standard Vim directory names like 'plugin'\ncall plug#begin('~/.vim/plugged')\n\nPlug 'mhinz/vim-startify'\nPlug 'vim-airline/vim-airline'\nPlug 'vim-airline/vim-airline-themes'\nPlug 'Yggdroot/indentLine'\nPlug 'w0ng/vim-hybrid'\n\n\"")]),t._v(" Initialize plugin system\ncall plug"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#end()")]),t._v("\n")])])]),s("p",[t._v("更换主题："),s("code",[t._v("colorscheme hybrid")]),t._v(" 然后按回车")]),t._v(" "),s("p",[t._v("这个时候，我们就可以看到配色发生变化了")]),t._v(" "),s("h3",{attrs:{id:"vim-文件和目录搜索插件，跳转文件-so-easy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim-文件和目录搜索插件，跳转文件-so-easy"}},[t._v("#")]),t._v(" Vim 文件和目录搜索插件，跳转文件 so easy")]),t._v(" "),s("ul",[s("li",[t._v("nerdtree： https://github.com/scrooloose/nerdtree")])]),t._v(" "),s("p",[t._v("安装成功以后，我们再次打开 vim 时，发现没有什么变化，我们回到文档，看看还需要做什么配置")]),t._v(" "),s("ul",[s("li",[t._v("在启动 vim 时打开 nerdTree：在 vimrc 中配置下面这句，但是不推荐，因为每次我们编辑代码的时候，我们都希望保留屏幕最大化。因此，我们希望的是使用快捷键唤醒 nerdtree。")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("autocmd vimenter * NERDTree\n")])])]),s("ul",[s("li",[t._v("快捷键设置：")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(372),alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:e(373),alt:""}})]),t._v(" "),s("p",[t._v("上面图片中配置代码：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" number\nsyntax on\ncolorscheme hybrid\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" mapleader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),t._v("\ninoremap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("leader"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Esc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":w"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("cr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\ninoremap jj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Esc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" use ctrl + h/j/k/l switch window\nnoremap <C-h> <C-w>h\nnoremap <C-j> <C-w>j\nnoremap <C-k> <C-w>k\nnoremap <C-l> <C-w>l\n\ncom! FormatJSON '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$!")]),t._v("python3 -m json.tool\n\ncall plug#begin('~/.vim/plugged')\n\nPlug 'mhinz/vim-startify'\nPlug 'vim-airline/vim-airline'\nPlug 'vim-airline/vim-airline-themes'\nPlug 'Yggdroot/indentLine'\nPlug 'w0ng/vim-hybrid'\nPlug 'scrooloose/nerdtree'\nPlug 'ctrlpvim/ctrlp.vim'\n\n\"")]),t._v(" Initialize plugin system\ncall plug"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#end()")]),t._v("\n\nnnoremap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("leader"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("v :NERDTreeFind"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("cr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nnnoremap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("leader"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("g :NERDTreeToggle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("cr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("NERDTreeShowHidden")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("NERDTreeIgnore")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\.git$'")]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\.hg$'")]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\.svn$'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("模糊搜索器：打开目录后，我们依然是需要一层一层打开文件夹才能找到目标文件。此时，我们可以使用工具 ctrlp")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/kien/ctrlp.vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctrlp.vim"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("自定义快捷键，方便跳转文件")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" g:ctrlp_map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<c-p>'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" g:ctrlp_cmd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CtrlP'")]),t._v("\n")])])]),s("ul",[s("li",[t._v("分屏，窗口切换快捷键")])])])]),t._v(" "),s("p",[t._v("bash 代码：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\" - Avoid using standard Vim directory names like 'plugin'\ncall plug#begin('~/.vim/plugged')\n\nPlug 'mhinz/vim-startify'\nPlug 'vim-airline/vim-airline'\nPlug 'vim-airline/vim-airline-themes'\nPlug 'Yggdroot/indentLine'\nPlug 'w0ng/vim-hybrid'\nPlug 'scrooloose/nerdtree'\nPlug 'ctrlpvim/ctrlp.vim'\n\n\"")]),t._v(" Initialize plugin system\ncall plug"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#end()")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" g:ctrlp_map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<c-p>'")]),t._v("\n")])])]),s("h3",{attrs:{id:"vim快速定位插件，文件位置任我行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim快速定位插件，文件位置任我行"}},[t._v("#")]),t._v(" Vim快速定位插件，文件位置任我行")]),t._v(" "),s("p",[t._v("回顾：")]),t._v(" "),s("ul",[s("li",[t._v("使用 w / e 基于单词移动，gg / G 文件收尾，0 / $ 行首尾，f {char} 查询字符")]),t._v(" "),s("li",[t._v("Ctrl + f ， Ctrl + u 前后翻屏")]),t._v(" "),s("li",[t._v("那我想跳转到"),s("strong",[t._v("窗口显示区")]),t._v("的任意位置呢？")])]),t._v(" "),s("p",[t._v("使用 "),s("a",{attrs:{href:"https://github.com/easymotion/vim-easymotion",target:"_blank",rel:"noopener noreferrer"}},[t._v("Easymotion"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("使用递归映射：记住下面的快捷键即可")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("nmap ss "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Plug"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("easymotion-s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("bash 代码：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\" - Avoid using standard Vim directory names like 'plugin'\ncall plug#begin('~/.vim/plugged')\n\nPlug 'mhinz/vim-startify'\nPlug 'vim-airline/vim-airline'\nPlug 'vim-airline/vim-airline-themes'\nPlug 'Yggdroot/indentLine'\nPlug 'w0ng/vim-hybrid'\nPlug 'scrooloose/nerdtree'\nPlug 'ctrlpvim/ctrlp.vim'\n\nPlug 'easymotion/vim-easymotion'\n\n\"")]),t._v(" Initialize plugin system\ncall plug"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#end()")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" g:ctrlp_map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<c-p>'")]),t._v("\nnmap ss "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Plug"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("easymotion-s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"vim-suuround，编辑也要成双成对"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim-suuround，编辑也要成双成对"}},[t._v("#")]),t._v(" Vim-suuround，编辑也要成双成对")]),t._v(" "),s("p",[t._v("如果快速让你更换一对单引号为双引号，你会怎么做？")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/tpope/vim-surround",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vim-suround"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("使用，记住以下快捷键：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("- ds "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delete a surrounding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n- cs "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("change a surrounding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n- ys "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("you "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" surrounding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("具体操作")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(374),alt:""}})]),t._v(" "),s("p",[t._v("bash 配置")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\" - Avoid using standard Vim directory names like 'plugin'\ncall plug#begin('~/.vim/plugged')\n\nPlug 'mhinz/vim-startify'\nPlug 'vim-airline/vim-airline'\nPlug 'vim-airline/vim-airline-themes'\nPlug 'Yggdroot/indentLine'\nPlug 'w0ng/vim-hybrid'\nPlug 'scrooloose/nerdtree'\nPlug 'ctrlpvim/ctrlp.vim'\nPlug 'easymotion/vim-easymotion'\n\nPlug 'tpope/vim-surround'\n\n\"")]),t._v(" Initialize plugin system\ncall plug"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#end()")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" g:ctrlp_map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<c-p>'")]),t._v("\nnmap ss "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Plug"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("easymotion-s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"强大的-vim-模糊搜索与替换插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强大的-vim-模糊搜索与替换插件"}},[t._v("#")]),t._v(" 强大的 vim 模糊搜索与替换插件")]),t._v(" "),s("p",[t._v("fzf 与 fzf.vim")]),t._v(" "),s("ul",[s("li",[t._v("官网："),s("a",{attrs:{href:"https://github.com/junegunn/fzf.vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("fzf.vim"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("安装：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Plug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'junegunn/fzf'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dir'")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'~/.fzf'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'do'")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./install --all'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nPlug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'junegunn/fzf.vim'")]),t._v("\n")])])]),s("p",[t._v("基本使用：")]),t._v(" "),s("ul",[s("li",[t._v("使用 Ag [PATTERN] 模糊搜索字符串")]),t._v(" "),s("li",[t._v("使用 Files [PATH] 模糊搜索目录")]),t._v(" "),s("li",[t._v("更多用法参考 "),s("a",{attrs:{href:"https://github.com/junegunn/fzf.vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("fzf.vim"),s("OutboundLink")],1),t._v(" 中的 Command 部分")])]),t._v(" "),s("p",[t._v("如果想要实现 "),s("strong",[t._v("批量搜索替换")]),t._v(" ，可以使用插件 "),s("a",{attrs:{href:"https://github.com/brooth/far.vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("far.vim"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("安装：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Plug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'brooth/far.vim'")]),t._v("\n")])])]),s("ul",[s("li",[t._v("基本使用：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v(":Far foo bar **/*.py  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示将字母 foo 换成 bar，**/*.py 表示需要替换的文件（范围）")]),t._v("\n:Fardo  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 确认执行")]),t._v("\n")])])]),s("p",[t._v("具体使用参考："),s("a",{attrs:{href:"https://github.com/brooth/far.vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("usage"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"愉快写-golang-之-vim-go-插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#愉快写-golang-之-vim-go-插件"}},[t._v("#")]),t._v(" 愉快写 golang 之 vim-go 插件")]),t._v(" "),s("ul",[s("li",[t._v("github 地址："),s("a",{attrs:{href:"https://github.com/fatih/vim-go",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-go"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("具有 代码补全，重构，跳转，自动格式化，自动导入等功能")]),t._v(" "),s("li",[t._v("基本可以满足 golang 的日常开发")]),t._v(" "),s("li",[t._v("插件安装："),s("code",[t._v("Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }")])]),t._v(" "),s("li",[t._v("使用： "),s("a",{attrs:{href:"https://github.com/fatih/vim-go/wiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("Usage"),s("OutboundLink")],1),t._v(" ，可以参考官网（使用说明比较少，可参考相关资料）")])]),t._v(" "),s("p",[t._v("常用快捷键：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Ctrl + x o 代码提示\nCtrl + i\nCtrl + o\n")])])]),s("h3",{attrs:{id:"python-mode-把-vim-打造成轻量-python-ide"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python-mode-把-vim-打造成轻量-python-ide"}},[t._v("#")]),t._v(" python-mode 把 vim 打造成轻量 Python-IDE")]),t._v(" "),s("p",[t._v("Python 插件使用较多的是")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/davidhalter/jedi-vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("jedi-vim"),s("OutboundLink")],1),t._v("  自动补全")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/python-mode/python-mode",target:"_blank",rel:"noopener noreferrer"}},[t._v("python-mode"),s("OutboundLink")],1),t._v(" a Python IDE for Vim，具备补全，跳转，调试，重构，格式化等功能")]),t._v(" "),s("li",[t._v("有了上面，即使在服务器也可以愉快的调试代码了")])]),t._v(" "),s("p",[t._v("Python-mode 安装相关：")]),t._v(" "),s("ul",[s("li",[t._v("前提：Vim >= 7.3 ，如何判断？ "),s("code",[t._v("vim --version")])]),t._v(" "),s("li",[t._v("安装：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Plug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'python-mode/python-mode'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'for'")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'python'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'branch'")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'develop'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("安装完成以后，添加如下配置：")]),t._v(" "),s("p",[s("img",{attrs:{src:e(375),alt:""}})]),t._v(" "),s("p",[t._v("jedi-vim 安装相关")]),t._v(" "),s("p",[t._v("安装： "),s("code",[t._v("Plugin 'davidhalter/jedi-vim'")])]),t._v(" "),s("p",[t._v("配置和使用："),s("a",{attrs:{href:"https://github.com/davidhalter/jedi-vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("Usage"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"vim-tagbar-更愉快地浏览代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim-tagbar-更愉快地浏览代码"}},[t._v("#")]),t._v(" vim tagbar 更愉快地浏览代码")]),t._v(" "),s("ul",[s("li",[t._v("官网："),s("a",{attrs:{href:"https://github.com/majutsushi/tagbar",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-tagbar"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("需要安装 Universal Ctags 生成对应的 Ctags文件："),s("a",{attrs:{href:"http://docs.ctags.io/en/latest/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ctags"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("vim tagbar 安装")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Plug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'majutsushi/tagbar'")]),t._v("\n")])])]),s("ul",[s("li",[t._v("使用：使用 vim 打开文件后，输入 "),s("code",[t._v(":TagbarToggle")]),t._v(" 即可触发，我们可以对其定义快捷键映射")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("nnoremap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("leader"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("t TagbarToggle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("CR"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("高亮你感兴趣的单词，使用插件："),s("a",{attrs:{href:"https://github.com/lfv89/vim-interestingwords",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-interestingwords"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[t._v("安装：")])])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Plug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lfv89/vim-interestingwords'")]),t._v("\n")])])]),s("ul",[s("li",[t._v("使用方式：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Highlight "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Leader"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("k  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用快捷键 leader + k")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Navigate highlighted words "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" n and "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//跳转到下一个高亮的单词")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Clear every word highlight "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Leader"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("K")]),t._v(" throughout the buffer  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//大 K 清除")]),t._v("\n")])])]),s("h3",{attrs:{id:"强大的-vim-补全插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强大的-vim-补全插件"}},[t._v("#")]),t._v(" 强大的 Vim 补全插件")]),t._v(" "),s("blockquote",[s("p",[t._v("使用前提："),s("strong",[t._v("Note:")]),t._v(" deoplete requires Neovim (0.3.0+ and of course, "),s("strong",[t._v("latest")]),t._v(" is recommended) or Vim8 with Python3.6.1+ and timers enabled.")])]),t._v(" "),s("p",[t._v("特点：异步补全")]),t._v(" "),s("ul",[s("li",[t._v("官网："),s("a",{attrs:{href:"https://github.com/Shougo/deoplete.nvim",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-deoplete"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("安装")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" has"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nvim'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  Plug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Shougo/deoplete.nvim'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'do'")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("':UpdateRemotePlugins'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n  Plug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Shougo/deoplete.nvim'")]),t._v("\n  Plug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'roxma/nvim-yarp'")]),t._v("\n  Plug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'roxma/vim-hug-neovim-rpc'")]),t._v("\nendif\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" g:deoplete"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#enable_at_startup = 1  " 这句话建议放在最后')]),t._v("\n")])])]),s("p",[t._v("说明：使用该插件后会出现预览窗口，而且不方便关闭。为了解决该问题，需要将下面的代码，放在最后")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" g:deoplete"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#enable_at_startup = 1  " 这句话建议放在最后')]),t._v("\n")])])]),s("p",[t._v("其他插件推荐：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/deoplete-plugins/deoplete-go",target:"_blank",rel:"noopener noreferrer"}},[t._v("deoplete-go"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("安装：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Plug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Shougo/deoplete.nvim'")]),t._v("\nPlug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deoplete-plugins/deoplete-go'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'do'")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'make'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("使用：看文档 "),s("a",{attrs:{href:"https://github.com/deoplete-plugins/deoplete-go",target:"_blank",rel:"noopener noreferrer"}},[t._v("deoplete-go"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("其他插件推荐：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/neoclide/coc.nvim",target:"_blank",rel:"noopener noreferrer"}},[t._v("neoclide/coc-vim"),s("OutboundLink")],1),t._v(" 一个强大的 neovim / vim8 补全插件，LSP支持 （国产，前端大神开发的）")]),t._v(" "),s("li",[t._v("特点：快速，可靠")]),t._v(" "),s("li",[t._v("安装方式：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 以下方式三选一\n\n"')]),t._v(" Use release branch\nPlug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'neoclide/coc.nvim'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'branch'")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'release'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\" Or latest tag\nPlug 'neoclide/coc.nvim', {'tag': '*', 'branch': 'release'}\n\n\"")]),t._v(" Or build from "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" code by use yarn: https://yarnpkg.com\nPlug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'neoclide/coc.nvim'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'do'")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yarn install --frozen-lockfile'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('\n\n" 还可以根据不同的语言选择不同的补全配置，详情看官网 Extensions 部分\n\n')])])]),s("ul",[s("li",[t._v("自定义配置： 参考官网的 Examples")])]),t._v(" "),s("p",[t._v("当前 bash 配置：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" number\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\" - Avoid using standard Vim directory names like 'plugin'\ncall plug#begin('~/.vim/plugged')\n\nPlug 'mhinz/vim-startify'\nPlug 'vim-airline/vim-airline'\nPlug 'vim-airline/vim-airline-themes'\nPlug 'Yggdroot/indentLine'\nPlug 'w0ng/vim-hybrid'\nPlug 'scrooloose/nerdtree' \nPlug 'ctrlpvim/ctrlp.vim'\nPlug 'easymotion/vim-easymotion'\nPlug 'tpope/vim-surround'\nPlug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }\nPlug 'junegunn/fzf.vim'\nPlug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }\nPlug 'python-mode/python-mode', { 'for': 'python', 'branch': 'develop' }\nPlug 'majutsushi/tagbar'\nPlug 'lfv89/vim-interestingwords'\nPlug 'davidhalter/jedi-vim'\n\nif has('nvim')\n  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }\nelse\n  Plug 'Shougo/deoplete.nvim'\n  Plug 'roxma/nvim-yarp'\n  Plug 'roxma/vim-hug-neovim-rpc'\nendif\nPlug 'Shougo/deoplete.nvim'\nPlug 'deoplete-plugins/deoplete-go', { 'do': 'make'}\nPlug 'neoclide/coc.nvim', {'branch': 'release'}\n\n\n\"")]),t._v(" Initialize plugin system\ncall plug"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#end()")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" g:ctrlp_map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<c-p>'")]),t._v("\nnmap ss "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Plug"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("easymotion-s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" g:deoplete"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#enable_at_startup = 1  " 这句话建议放在最后')]),t._v("\n")])])]),s("h3",{attrs:{id:"vim-代码格式化和静态检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim-代码格式化和静态检查"}},[t._v("#")]),t._v(" Vim 代码格式化和静态检查")]),t._v(" "),s("blockquote",[s("p",[t._v("vim-autoformat 和 Neoformat 是两种使用较多的格式化插件，这里我们选择 Neoformat")])]),t._v(" "),s("p",[t._v("目标：")]),t._v(" "),s("ul",[s("li",[t._v("把精力集中在代码逻辑本身，而不是整理格式这些浪费精力的事情上")]),t._v(" "),s("li",[t._v("静态检查是为了让代码编写更加规范。如 golint /  pylint / eslint 等")]),t._v(" "),s("li",[t._v("无论你编写何种编程语言，最好都加上自动格式化静态检查")])]),t._v(" "),s("p",[t._v("插件工具：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/sbdchd/neoformat",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-neoformat"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("安装：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Plug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sbdchd/neoformat'")]),t._v("\n")])])]),s("p",[t._v("安装完成后，如果需要格式化 python，需要安装对应语言的格式化库：python autopep8 / js 的prettier等")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" python的格式化库\npip install autopep8\n\n"')]),t._v(" js 的格式化库\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(' prettier\n\n" '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". 其他格式化库可以看 官方文档 自行配置和安装\n")])])]),s("p",[t._v("静态检查 Lint")]),t._v(" "),s("p",[t._v("neomake 和  ale 是两种常见的 lint 插件，这里我们选用 ale")]),t._v(" "),s("ul",[s("li",[t._v("插件官网：\n"),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/w0rp/ale",target:"_blank",rel:"noopener noreferrer"}},[t._v("ale-github"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/neomake/neomake",target:"_blank",rel:"noopener noreferrer"}},[t._v("neomake"),s("OutboundLink")],1)])])]),t._v(" "),s("li",[t._v("同样，我们需要安装对应的语言的 lint 库。比如 eslint / pylint / golint 等")]),t._v(" "),s("li",[t._v("vim 8 和 neovim 支持异步检查，不会影响 vim 编辑，推荐使用。")]),t._v(" "),s("li",[t._v("安装：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v('" 以下二选一\nPlug '),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'w0rp/ale'")]),t._v("\n\nPlug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'neomake/neomake'")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("这里我们选择 ale")])]),t._v(" "),s("li",[t._v("安装对应语言的 lint 库")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("pip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" pylint\n")])])]),s("p",[t._v("由于 pylint 插件对代码检查非常严格，我们需要对其设置，从而忽略一些不重要的代码检查规则。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 定义一个名为 .pylintrc 文件放在根目录下，在里面配置需要忽略的选项\n"')]),t._v(" 使用方法——参考 官方文档\n")])])]),s("h3",{attrs:{id:"vim-快速注释代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim-快速注释代码"}},[t._v("#")]),t._v(" vim 快速注释代码")]),t._v(" "),s("blockquote",[s("p",[t._v("vim 注释插件有很多，这里我们选择一个轻量的 vim-commentary")])]),t._v(" "),s("ul",[s("li",[t._v("插件官网： "),s("a",{attrs:{href:"https://github.com/tpope/vim-commentary",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-commentary"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("安装：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Plug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tpope/vim-commentary'")]),t._v("\n")])])]),s("ul",[s("li",[t._v("使用：\n"),s("ul",[s("li",[t._v("记住常用的命令 gc 注释和取消注释")]),t._v(" "),s("li",[t._v("插件会根据不同的文件类型使用不同注释。python(#)， golang(//)")])])])]),t._v(" "),s("h3",{attrs:{id:"vim-和-git-，强强联手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim-和-git-，强强联手"}},[t._v("#")]),t._v(" vim 和 git ，强强联手")]),t._v(" "),s("blockquote",[s("p",[t._v("在 vim 里，使用 git，使用 git 包装器 fugitive")])]),t._v(" "),s("ul",[s("li",[t._v("插件官网："),s("a",{attrs:{href:"https://github.com/tpope/vim-fugitive",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim-fugitive"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("安装：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Plug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tpope/vim-fugitive'")]),t._v("\n")])])]),s("ul",[s("li",[t._v("使用：\n"),s("ul",[s("li",[t._v("常用命令 Gedit, Gdiff ,Gblame ,Gcommit等（更多使用推荐看官网），但是不推荐如此使用。")]),t._v(" "),s("li",[t._v("笔者还是喜欢用 Tmux 新开一个窗口来使用 git，后面会讲到")])])])]),t._v(" "),s("p",[t._v("其他插件：")]),t._v(" "),s("ul",[s("li",[t._v("插件官网： "),s("a",{attrs:{href:"https://github.com/jisaacks/GitGutter",target:"_blank",rel:"noopener noreferrer"}},[t._v("git-gutter"),s("OutboundLink")],1),t._v(" ，在 vim 里显示文件变动")]),t._v(" "),s("li",[t._v("作用：当我们修改文件后，可以显示当前文件夹的变动。那些内容是新增的，删除的，修改的等。")]),t._v(" "),s("li",[t._v("安装：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Plug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jisaacks/GitGutter'")]),t._v("\n")])])]),s("ul",[s("li",[t._v("使用：参考官方文档")])]),t._v(" "),s("p",[t._v("其他插件：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/junegunn/gv.vim",target:"_blank",rel:"noopener noreferrer"}},[t._v("gv.vim"),s("OutboundLink")],1),t._v(" ,在命令行查看 git 提交记录")]),t._v(" "),s("li",[t._v("安装：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Plug "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tpope/vim-fugitive'")]),t._v('   " 这一插件我们前面已经安装，可不安装\n\nPlug '),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'junegunn/gv.vim'")]),t._v("\n")])])]),s("ul",[s("li",[t._v("使用：使用 "),s("code",[t._v(":GV")]),t._v(" 来调用")])]),t._v(" "),s("h3",{attrs:{id:"本章小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本章小结"}},[t._v("#")]),t._v(" 本章小结")]),t._v(" "),s("ul",[s("li",[t._v("vim 插件很多，不可能全部介绍，需要学会自己寻找安装")]),t._v(" "),s("li",[t._v("通过 google 或者是 vimawesome 参考开源配置寻找插件")]),t._v(" "),s("li",[t._v("学会阅读插件的 README 文件和 doc 里的帮助文件学习插件的使用")])]),t._v(" "),s("p",[t._v("最后，缺少什么插件，就去寻找什么插件吧~")]),t._v(" "),s("h2",{attrs:{id:"_05-与时俱进的-vim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_05-与时俱进的-vim"}},[t._v("#")]),t._v(" 05-与时俱进的 Vim")]),t._v(" "),s("h3",{attrs:{id:"vim-与-tmux-，天作之合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vim-与-tmux-，天作之合"}},[t._v("#")]),t._v(" vim 与 Tmux ，天作之合")]),t._v(" "),s("p",[t._v("Tmux，是一个强大的终端复用工具，通过 brew(mac) apt-get install(ubuntu) 进行安装")]),t._v(" "),s("p",[t._v("作用：")]),t._v(" "),s("ul",[s("li",[t._v("可以复用终端，分屏，托管进程等")]),t._v(" "),s("li",[t._v("在服务器上即使退出服务器也不会被 kill，托管进程也很方便")]),t._v(" "),s("li",[t._v("可以方便的分割屏幕，实现多个进程公用屏幕")])]),t._v(" "),s("p",[t._v("课前资料：详细阅读："),s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/43687973",target:"_blank",rel:"noopener noreferrer"}},[t._v("手把手教你使用终端复用神器 Tmux，丢掉鼠标不是梦-知乎"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("安装："),s("code",[t._v("sudo apt-get install tmux")])]),t._v(" "),s("p",[t._v("基本使用：请看 "),s("a",{attrs:{href:"https://www.imooc.com/video/19480",target:"_blank",rel:"noopener noreferrer"}},[t._v("视频"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("分割屏幕： "),s("code",[t._v("ctrl + b %")])]),t._v(" "),s("li",[t._v("尝试一个窗口编写代码，一个窗口使用 shell 命令")]),t._v(" "),s("li",[t._v("尝试退出和重新 attach 到一个 tmux 的会话")])]),t._v(" "),s("h3",{attrs:{id:"无处不在的vim，让vim嵌入你的开发工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无处不在的vim，让vim嵌入你的开发工具"}},[t._v("#")]),t._v(" 无处不在的vim，让vim嵌入你的开发工具")]),t._v(" "),s("p",[t._v("几乎所有的 IDE 都支持 vim 插件，甚至 chrome 都支持 vim 插件")]),t._v(" "),s("ul",[s("li",[t._v("即使你不用 vim 作为主力编辑器，依然可以使用它的编辑方式")]),t._v(" "),s("li",[t._v("几乎流行的开发工具都支持vim插件，以vim 的方式编辑")]),t._v(" "),s("li",[t._v("比如 vscode、pycharm、Atom 都支持 vim 插件")])]),t._v(" "),s("h3",{attrs:{id:"与时俱进的-vim-之-neovim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#与时俱进的-vim-之-neovim"}},[t._v("#")]),t._v(" 与时俱进的 vim 之 neovim")]),t._v(" "),s("p",[t._v("官网："),s("a",{attrs:{href:"https://neovim.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("neovim"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("特点：")]),t._v(" "),s("ul",[s("li",[t._v("开发更加活跃，更丰富的特性和拓展，异步支持")]),t._v(" "),s("li",[t._v("neovim 的设计可以嵌入到很多的 GUI 里，加上好看的【外壳】")])]),t._v(" "),s("p",[t._v("文档和使用："),s("a",{attrs:{href:"https://github.com/neovim/neovim",target:"_blank",rel:"noopener noreferrer"}},[t._v("github-neovim"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"站在巨人的肩膀上，使用强大的开源配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#站在巨人的肩膀上，使用强大的开源配置"}},[t._v("#")]),t._v(" 站在巨人的肩膀上，使用强大的开源配置")]),t._v(" "),s("p",[t._v("如果你已经熟悉了 vim 的配置，可以从网上直接使用一些开源的配置")]),t._v(" "),s("p",[t._v("推荐配置：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/SpaceVim/SpaceVim",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpaceVim-github"),s("OutboundLink")],1),t._v(" 含有中文教程，比较友好")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/PegasusWang/vim-config",target:"_blank",rel:"noopener noreferrer"}},[t._v("本视频作者"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("对新手而言，不推荐其他复杂的vim 配置，上手太难。")]),t._v(" "),s("h2",{attrs:{id:"总结：vim-虐我千百遍，我待-vim-如初恋"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结：vim-虐我千百遍，我待-vim-如初恋"}},[t._v("#")]),t._v(" 总结：vim 虐我千百遍，我待 vim 如初恋")]),t._v(" "),s("p",[t._v("（完）")]),t._v(" "),s("p",[t._v("以下，是所有 bash 配置：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" number\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\" - Avoid using standard Vim directory names like 'plugin'\ncall plug#begin('~/.vim/plugged')\n\nPlug 'mhinz/vim-startify'\nPlug 'vim-airline/vim-airline'\nPlug 'vim-airline/vim-airline-themes'\nPlug 'Yggdroot/indentLine'\nPlug 'w0ng/vim-hybrid'\nPlug 'scrooloose/nerdtree' \nPlug 'ctrlpvim/ctrlp.vim'\nPlug 'easymotion/vim-easymotion'\nPlug 'tpope/vim-surround'\nPlug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }\nPlug 'junegunn/fzf.vim'\nPlug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }\nPlug 'python-mode/python-mode', { 'for': 'python', 'branch': 'develop' }\nPlug 'majutsushi/tagbar'\nPlug 'lfv89/vim-interestingwords'\nPlug 'davidhalter/jedi-vim'\n\nif has('nvim')\n  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }\nelse\n  Plug 'Shougo/deoplete.nvim'\n  Plug 'roxma/nvim-yarp'\n  Plug 'roxma/vim-hug-neovim-rpc'\nendif\nPlug 'Shougo/deoplete.nvim'\nPlug 'deoplete-plugins/deoplete-go', { 'do': 'make'}\nPlug 'neoclide/coc.nvim', {'branch': 'release'}\n\nPlug 'sbdchd/neoformat'\nPlug 'w0rp/ale'\nPlug 'tpope/vim-commentary'\nPlug 'tpope/vim-fugitive'\nPlug 'jisaacks/GitGutter'\nPlug 'junegunn/gv.vim'\n\n\n\"")]),t._v(" Initialize plugin system\ncall plug"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#end()")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" g:ctrlp_map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<c-p>'")]),t._v("\nnmap ss "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Plug"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("easymotion-s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("let")]),t._v(" g:deoplete"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#enable_at_startup = 1  " 这句话建议放在最后')]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);